# logging level
logging.level.org.springframework.web=DEBUG
logging.level.com.tibber.dev.revolutintegration=DEBUG

# encryption key
decryption.key=key

# revolut api url
revolut.api.url.transaction=https://sandbox-b2b.revolut.com/api/1.0/transactions
revolut.api.url.refreshtoken=https://sandbox-b2b.revolut.com/api/1.0/auth/token

# SQL statements
sql.select.auth=SELECT * FROM revolut_auth_info LIMIT 1
sql.select.transactiondata=SELECT id, type FROM transaction_data
sql.insert.transactiondata=INSERT INTO transaction_data (id, type, state, request_id, reason_code, created_at, updated_at, completed_at, scheduled_for, related_transaction_id, reference, leg_id, leg_amount, leg_currency, leg_bill_amount, leg_bill_currency, leg_account_id, leg_counterparty_id, leg_counterparty_account_id, leg_counterparty_account_type, leg_description, leg_balance, leg_fee, leg_id2, leg_amount2, leg_currency2, leg_account_id2, leg_description2, leg_balance2, card_number, card_first_name, card_last_name, card_phone, merchant_name, merchant_city, merchant_category_code, merchant_country) VALUES (:id,:type,:state,:requestId,:reasonCode,:createdAt,:updatedAt,:completedAt,:scheduledFor,:relatedTransactionId,:reference,:legId,:legAmount,:legCurrency,:legBillAmount,:legBillCurrency,:legAccountId,:legCounterpartyId,:legCounterpartyAccountId,:legCounterpartyAccountType,:legDescription,:legBalance,:legFee,:legId2,:legAmount2,:legCurrency2,:legAccountId2,:legDescription2,:legBalance2,:cardNumber,:cardFirstName,:cardLastName,:cardPhone,:merchantName,:merchantCity,:merchantCategoryCode,:merchantCountry)
sql.delete.transactiondata=DELETE FROM transaction_data WHERE created_at >= ? AND created_at < ?

# database for auth information and transaction data
spring.datasource.initialization-mode=always
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.jdbc-url=jdbc:mysql://localhost:3306/transaction_data
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.platform=mysql
spring.datasource.continueOnError=false

# database for batch meta data
spring.batch.initialize-schema=always
spring.batch.datasource.driver-class-name=org.postgresql.Driver
spring.batch.datasource.jdbc-url=jdbc:postgresql://localhost:5432/postgres?currentSchema=revolut
spring.batch.datasource.username=postgres
spring.batch.datasource.password=root
spring.batch.datasource.platform=postgres
spring.batch.datasource.continueOnError=false

